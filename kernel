add: pcmcia 16-bit support => y (default?)

package names {{{1
	http://kernel-handbook.alioth.debian.org/ch-packaging.html
	linux-image-2.6.26-2-686 - binary
	linux-headers-2.6.26-686

	 apt-get source linux-image-2.6-686
	 	installs source package linux-latest-2.6
	 	unpacks to <pkg name>/debian/changelog, rules etc.
		no src directory

	apt-get source linux-source-2.6.29 
		installs control files + src into 'linux-2.6-2.6.29'


acquiring source {{{1
	aptitude install linux-source-2.6.32 

patching {{{1
	install linux-patch-debian-2.6.xx (however, description for linux-source pkg indicates patches applied)
	then when compiling (e.g. for xen ):
		make-kpkg --added-patches xen clean
		make menuconfig
		make-kpkg --added-patches xen kernel-image

kernel headers {{{1
	Install with 'module-assistant prepare'
	/usr/src/linux/include/linux
		should be version.h if kernel has been built	
	/usr/include/linux
		libc headers - not for running kernel
kernel compile gen {{{1
	requirements
		make-kpkg utility from kernel-package package
		change /etc/kernel-img.conf to example in docs.
		libncurses5-dev
		fakeroot
	docs:
		http://tldp.org/HOWTO/Kernel-HOWTO/quick_steps.html
		debian kernel HOWTO
			http://newbiedoc.sourceforge.net/system/kernel-pkg.html
		http://kernel-handbook.alioth.debian.org/ch-common-tasks.html
	commands
		see 'make help'
		make mrproper
			recommended first step - removes old dependencies and .o files
		copy in existing .config 
		make oldconfig
		make menuconfig 
		fakeroot make-kpkg clean
		fakeroot make-kpkg --initrd --append-to-version=.033007 kernel_image kernel_headers

	create an initrd
		install initramfs-tools
		update-initramfs -c -k <kernel version>
		update-initramfs -c -k '2.6.18-3.686'


utilities {{{1
	distcc
		compile on different computer
	lskpatch
		display info on installed patches

2.6  {{{1

Initramfs
	required for 2.6
	initrd if used copied into this

Storage, e.g. IDE, SATA
	see hardware/storage

concepts {{{1
initrd {{{2

http://www.kernel.org/doc/man-pages/online/pages/man4/initrd.4.html

Mount namespaces {{{2
	http://www.kernel.org/doc/man-pages/online/pages/man2/mount.2.html
	
	set of file system mounts that are visible to a process
	changes in one process affect all others
	/proc/PID/self file exposes the list of mount points in the
       mount namespace of the process with the specified ID
	after fork, child process shares parent's namespace
	after clone, child gets private copy

interfaces {{{1

sysfs {{{2
	Not needed in distros > 2006
	Option is CONFIG_SYSFS_DEPRECATED since 2.6.20
	always compiled in kernel
	improved way (vs. /proc) for drivers to export their state
	used by udev & sysfsutils to obtain info on kernel objs
	entries do not provide access thr driver - for that use /dev
	to use, mount as 'none /sys sysfs defaults 0 0' 

	
auto lo
iface lo inet loopback

# The primary network interface
#allow-hotplug eth0
#iface eth0 inet dhcp

auto br0
iface br0 inet static
      bridge_ports eth0
      bridge_maxwait 0
                bridge_fd       1
      address 192.168.4.100
      netmask 255.255.255.0
      gateway 192.168.4.1
                dns_nameservers  8.8.8.8 8.8.4.4

auto eth0
iface eth0 inet manual
	Print device info:
		udevadm info -a -p /sys/class/net/eth0
	After updating a rules file in /etc/udev/rules.d, do a dry run
		udevadm test /sys/class/net/eth0 


	usbfs
		new mount point for usb info
		usbdevfs - term deprecated

procfs {{{2

http://www.kernel.org/doc/man-pages/online/pages/man5/proc.5.html

Kernel exports info to user space via virtual filesystem
Files can be read and given permissions but do not exist on disk	
Files usually read-only
Kernel config: Filesystems = Pseudo Filesystems = /proc file system support

sysctl command {{{2
originally mounted at /proc/sys
installed with procps package
Kernel config: General Setup = Sysctl support
sysctl migrating to write to sysfs



boot support
	drivers must be compiled into kernel
		IDE support to mount root filesystem
			CONFIG_BLK_DEV_IDEDISK=y
		floppy disk support (in kernel, not module)
	initrd
		docs:
			initrd.txt in src/Documentation
				used to load modules required to boot the system but are needed
				before the file system is available, usually because the root fs is
				on an otherwise unsupported device (e.g. LVM, software RAID) not
				usually needed in a custom kernel

kernel config general
	select Processor family
		For C3 Nehemiah, use C3-2 (2.4.22 >)
	Enable APM
	Enable filesystem support
		entries for fat, vfat, & NTFS-ro
	Device Drivers
		Graphics support
			VESA VGA graphics support
			Console display driver support
				Video Mode Selection support (Console drivers sect)
					add 'vga=791' line in lilo.conf
				Frame-Buffer suport
					fbset utility to adjust resolution etc.
					* Support for frame buffer devices 
					* VESA VGA graphics console
	Kernel Card Services - for Cardbus
		CONFIG_HOTPLUG, CONFIG_PCMCIA, but not CONFIG_HOTPLUG_PCI.

rdev utility
	set root device and other parameters with default values set in kernel image.
	see Boot-Prompt HOWTO


