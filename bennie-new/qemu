
Image file {{{1

Usage
	qemu-img create xp.raw 3G
	qemu -hda xp.raw -cdrom /dev/cdrom -boot d -net user -m 256
	run the image as follows :
	qemu -hda xp.raw -cdrom /dev/cdrom -boot c -net user -m 256

Test a bootable USB drive
	qemu -usb /dev/sdb

Convert an image file to a block device 
	qemu-img convert root.qcow2 -O raw /dev/sdb

Backup an image file - size is < 1/3
	tar c --sparse -f img.bak.tar img.img 

Make filesystem on a partitioned loopback file
	boot a rescue disk image with the device as an additional disk (lame)

mount partition in a loopback file
	http://www.unix.com/filesystems-disks-memory/24366-can-loopback-filesystem-partitioned.html
	http://wiki.edseek.com/guide:mount_loopback

Options {{{1

Boot from CD or iso
	-boot d
	-cdrom 	path to CD device or file

Display monitor
	-monitor stdio

Allow graphical installer, e.g. Ubuntu: option -std-vga
Allow vnc access w/o password: -vnc 1

Run as console
	-no graphic
	Ctrl-a c to switch to monitor

Remote qemu:
	option: append "console=ttyS0 root=/dev/hda1 ro"
	in guest /etc/inittab: s1:12345:respawn:/sbin/agetty -L ttyS0 9600 vt100 

Installing Debian
	At install prompt
		install console=ttyS0,9600,n8
		show serial console - ^+M+3

Use USB devices
	usb_add in monitor
		info usbhost
		usb_add host:<device id as shown in previous>

Networking {{{1

overview
	http://kvm.qumranet.com/kvmwiki/Networking

Routing - allow instance to access net
	-net nic -net user


Network bridge
	http://compsoc.dur.ac.uk/~djw/qemu.html 

- set up bridging for your host's LAN interface (ifcfg-br0 TYPE=Bridge,
ifcfg-eth0 BRIDGE=br0) so eth0 and all the future guest interfaces will
talk to the same physical port
- start qemu with "-net nic -net tap". If you run more than one guest,
you will need to set distinct MAC addresses as in "-net nic,mac=XX:XX:XX:XX:XX:XX"
- Iptables not needed


