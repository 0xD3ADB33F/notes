


create & repair partitions {{{1
Planning {{{2

500M is enough for root+boot

Partitioning utilities {{{2 

compatibility
	don't use both PQMagic and Linux fdisk to create partitions
	on the same drive.  Instead, use PQM exclusively.

fstab
    entry to mount data part as ~/data.  non-Linux fs types: Options suid,auto,uid=500,gid=100

partition writable by users
	fstab options: rw - no need for uid option in fs types that preserve ownership
	create directory in partition writable by user
cfdisk
	said (by the fdisk man page) to be reliable and better
	than fdisk
	'maximize' option creates incompatibility with Windows?
	print/sector command shows partitions in hd order

parted (qtparted and nparted on Knoppix)
can resize ext2 & 3 partitions but start point can't move.
	has lost partition rescue feature

sfdisk - partition table reporting
	-s  [<device - partition or disk>]    
		show disk/partition size
	-l [options] <dev>
	-D  DOS compatibility - free 512 free at part beginning
	-L  ignore irrelevant to Linux

testdisk
	haven't tried yet

Partition copy & backup {{{2

partimage utility on knoppix
	partimage imginfo <img-file> 
		show size, original device, etc.
	No way to restore parts of image file
dd
	exact copy of entire partition including MBR
		dd if=/dev/part of=/dev/anotherpart

Mounting & Permissions {{{1

mount
	attaches a filesystem on a device to a point in unix filesystem tree.
	defaults options 
		rw, suid, dev, exec, auto, nouser, async

mount partition in a loopback file
	http://wiki.edseek.com/guide:mount_loopback
	http://www.unix.com/filesystems-disks-memory/24366-can-loopback-filesystem-partitioned.html
	install grub
		http://www.usenet-forums.com/linux-general/95580-install-grub-hdd-image.html


allow umounting
	Running 'exec /bin/sh' eliminates last processes.
	fuser: show what processes are using which files.
	cat /proc/mounts

automount
	docs
		HOWTO - very good intro to network filesystems 
			http://www.Linux-Consulting.com/Amd_AutoFS/autofs.html

	requirements
		amd automount daemon - userspace
		autofs - kernel support needed -
			cat /proc/filesystems -> autofs

attributes
	ownership
		user & users imply noexec, nosuid, & nodev unless subsequently
		overriden 
			e.g. -o user[s],exec,suid
		"auto, uid=500, gid=100" 
			take all ownership of files in mounted partition.
restricting access
	Colin Watson
		There should be no need to apply the restrictive permissions to
		subdirectories too, because once execute permission is withheld on
		a parent directory you can't get to the subdirectories anyway 
	in /home - chmod * 700
	in adduser.conf
		DIR_MODE=700

		
change times
	atime
		access time
		time of read (including backups) 
		permissions changes don't affect
	mtime   
		change to file data
	ctime   
		change to file data, permissions, or ownership (most
		inclusive)

Changing volumes
	with ext2 filesystems
		e2fsadm - 
			resize physical or LVM volumes and filesystems (using lvextend and
			ext2online)
		ext2online - resize online (mounted) ext2 fs. Requires kernel patch. 
		ext2resize - resize offline ext2 fs.
	LVM
		pvresize - resize vg on a device


Journals
	Add/Remove ext2 journal
		tune2fs -j /dev/xxx<n>
		tune2fs -O ^has_journal /dev/xxx<n>

Filesystems on floppies
	Low-level floppy format
		format floppy	fdformat /dev/fd0u1440
		mformat a:  make msdos filesystem on floppy

	Superformatting a floppy and writing some files to it:
		fdformat /dev/fd0u1722 (or maybe fd0u1920 = 2 Meg)
			filesystem type?
		mkfs.fstype	
			e.g mkfs.msdos, mkfs.ext2 
		or use mformat, see info fdutils

	dosfstools debian package
		includes mkfs.vfat

vfat fs
	make from Linux
		partition type is 0C (FAT 32 LBA)
		mkfs.vfat
			Debian package dosfstools
			 -F 32 <device>
			makes Fat 16 by default
			if F32 excluded: error 'too large filesystem'

Recovery
	Make boot disk
		cat BOOT ROOT.gz USR.bz2 > /dev/fd0u1722
	recover deleted file
		recover, gtk-recover

	reiserfs undelete - works from copy to preserve original
		dd < /dev/hdx > hdx.image
		reiserfsck -S hdx.image  

Volume Management
	LVM main program: lvm

Loop files 
		

file for use as loop devices - img
	create file 
		http://www.debian-administration.org/articles/575
		or create with qemu-img
		dd if=/dev/zero of=/home/you/cryptfile bs=1M count=500
	create a device from file
		losetup <dev> <file>
		advanced tutorial: http://tinyurl.com/4qbyou
	fill with zeros
		badblocks -s -w -t random -v /dev/loop0
		or make fs (both?)
	mount a partition
		print partition table
			 fdisk -l -u file.img
		multiply starting cyclinder number * 512, e.g. 63 * 512 = 32256
		mount -o loop,offset=32256 image.img mnt	

Filesystem Cryptography
	k2.6 module for crypt target support - dm_crypt
	also need to activate ciphers

NFS
	misc
		default protocol UDP
	client
		docs for client mount options
			man nfs
		need kernel support
			smbfs
		fstab entry options
			options read left to right
				user implies noexec, so to allow exec put after user
			nosuid - recommended
				prevents running a suid program on mount and so gaining
				some root prvilages on client.
			nolock
			intr 	allow Ctrl+C interrupt
			example 
				via:/home /mnt/via/home nfs defaults,users,exec,noauto,rsize=8192,wsize=8192 0 0
		view nfs shares in konqueror
			fish://192.168.1.130/share
	server
		optional server kernel support
			pkg nfs-kernel-server
			module nfsd
		exports file 
			entry format
				/opt 192.168.1.0/255.255.255.0(rw)
			options defaults
				rw
				root_squash (root on client accesses as 'nobody'
			options other
				all_squash - all users mapped to nobody
				map_static
					see exports man page for format
		statd (?) controls access via tcpwrappers

	troubleshooting	
		restarting: restart both server and portmapper
		rpcinfo -p
		rpcinfo -p <remote host>	(should be same?)
		


Reiserfs r/o access from Windows
	http://p-nand-q.com/download/rfstool/overview.html

Chroot {{{1

cp /etc/resolv.conf mnt/etc
mount -o bind /dev mnt/dev
mount -o bind /proc mnt/proc

