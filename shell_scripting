SHELL PROGRAMMING
=================

Scripts
	When the shell runs a script, it spawns a subshell that actually reads
	and executes the commands in the script.  If the script includes a
	statement executing a second script, a new subshell is created to run
	it.  Subshells are not created when executing programs, user-defined
	functions, or built-in commands.  Subshell creation for scripts is suppressed when invoked with '. <script name>'.
Variables
	name=value
	name=		sets value to null.  Use 'unset' to delete
	printenv	Show variables for current & child shells.

Scope
	Shell variables are local unless exported (environment variables)
	ie - can set PATH as in: PATH=$HOME/bin:$PATH, but must give "export
	PATH" to make global.
	
	Exporting a variable makes the name available to executing shell and
	any child shells. Name is not exported to the parent (shell running the
	script).  When an exported name is changed, it is changed in all environments in which it is available.
	
	Environment of a subshell is inherited from its parent.  Child gets a 
	copy of parent's environment and so cannot change parent variables.


Read file:	source <file>
Read a file (. in scripts) - if a rc type file, initializes the app

