
whatis database		Short description of commands - must know command name
whereis			Search for command, not just on path
which or type		Show full path of first matching command in path


Find
=======
	Find any kind of directory entry (regular file, directory, link etc.)
	usage: find <where to search> <-operator 'pattern'> ...	

find [pathnames] [conditions]

May search multiple paths.  Default is current directory

Conditions may be separated as alternatives by '-o' (otherwise multiple conditions are 'AND'ed) or negated with '\!' (example ... \! -name "thing*")
		adjascent:	AND
		-o		    OR
		! exp		NOT

Time specifcation 
	24 hour periods
		-atime (last read), -mtime (modification), and -ctime (last change of
		owner or permissions) conditions
	minutes
		-amin, cmin, mmin

    +n/m/-n      Last access is more than/exactly/less than n 

	Examples:
		find -mtime -1 - modified during last 24 hours
		find -ctime +3  -- find files changed > 3 days ago
		find / -size +1024 \( -mtime +365 -o -atime +365 \) -ls
		find / -amin +2 -amin -6
			modified between 6 and 2 minutes ago


-exec command {} \;
Run command, from the starting directory, on each file found


-mount, -xdev	Don't descend into directory trees on other filesystems
-maxdepth n 

-name, -iname
    Exclude matches with -prune, e.g.
    find -name thing -prune -o -print (print all except with thing in name)
    
-path	
* Name search for whole name, therefore must use wildcards if looking 
for a substring.
* Match on following 'path/fn' (ie uses complete path), starting at base
path.
Example: Find files in current dir:
    find . -path './kt[0-9]'

-size n[c]
Size in blocks (512 byte blocks) or, with 'c' - characters

Examples: 
find /usr/src -name '*.c' -size +100k -print		
find . -atime +5 \(-name "*.o" -o -name "*.tmp"\)
find /usr \! -path '/usr/src/*' \! -path '/usr/doc/*' -iname 'libg*' -print
find -path './*' -- all files in current directory
find . -name \*.pdf | grep -v "^\./Docs/Prog"   Find the pdf files not in the Docs/Prog subdirectory of the current directory.
	
Finding by type:
- type
    b	block file
    c	character file
    d	directory
    f	plain file (avoids /proc)
    l	symbolic link
    p	named pipe
    s	socket


Find contents of files
 find . -name '*.[ch]' | xargs grep -l thing


Execute Commands on Found Files
---------------------------------
From least to most efficient:

-exec cmd [args] '{} \;'  
    {} stands for a filename arg; ';' indicates the end of args to cmd.
    use -ok instead of -exec to be prompted

find ... | xargs -J (take whole file list) X cmd_name X (X's deliminate the 
command) arg
    e.g. (move all pdf's not in ./pdf dir to the ./pdf dir)
	find . -name "*.pdf" -print | grep -v "^\./pdfs/" | xargs -J X mv X ./pdfs/
	find <path> -type f | xargs chmod 0644

	xargs method recommended because runs only one instance of action command.




Grep		
=======

grep pat path 

-i	case insensitive search
-r	recursive - search subdirectories
\	Backslash - a quoting character
-c pat	Count occurences of pattern
	grep -r pat /usr/local/... 

Egrep
	Extended searching.  
	Quote expression and surround each regex with () and use:
	+	1=> occurances
	?	0<>1 occurances
	|	OR operator

	-f	Search for list of patterns in a file
	

Locate 	
======

Match filename patterns:  if pat contains no metacharacters, pat can match any part of filename.

Try also: 'slocate' (?)


