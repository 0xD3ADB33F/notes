Ideas & Tasks {{{1

Classes
	class A:
	  def __init__(self, name):
		self.name = name
	  def __str__(self):
		return self.__class__.__name__ + ':' + self.name

Data structures {{{1

Tuples:
Immutable therefore idea as data records

Unpacking:
	* prefix when argument to function:
		tup =(1,2)
		myfunction(*tup) => myfunction(1,2)



Introspection {{{1

	getattr function
		getattr(module,method,default_method)
			returns a function as specified by string 'method'	
			acts as a dispatcher


O/S {{{1

	os:
		listdir, mkdir, remove
	os.path:
		join, isdir, exists, getmtime

I/O {{{1

Read from prompt {{{2

instead of, use:
	raw_input(): use sys.stdin.readline()
	input(): use eval(sys.stdin.readline())

file reading {{{2
   
Files
	make a list of lines in file
		lines_list = list(fileobj)
		lines_list = fileobj.readlines()
		lines_list = fileobj.read().splitlines() # remove '\n'

if args[0]=='-': 
	for line in iter(sys.stdin.readline, ""): 

Text {{{1

string processing {{{2
		non-printing chars
			\n line feed
            \t tab

Codecs {{{2

Open filename in r+ mode using UTF-8 encoding
	import codecs
	filename='blah'
	fc=codecs.open(filename,encoding='utf-8',mode='r+') 


			print "You said!", line  


vim:ts=4 sw=4 foldmethod=marker
Web {{{1

Instant web server
	runs on port 8000
	python -c "import SimpleHTTPServer;SimpleHTTPServer.test()"
		
External Processes {{{1

Subprocess module
	http://docs.python.org/library/subprocess.html
	http://www.doughellmann.com/PyMOTW/subprocess/

	run external program, wait to finish
		subprocess.call('ls -l', shell=True)
	run program, don't wait
		process=s.Popen('ls',stdout=s.PIPE)
		(stdoutdata, stderrdata)= process.communicate()
	'process' is a Popen instance

