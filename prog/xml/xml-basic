
xml Declaration
	e.g  <?xml version="1.0"?>
	not required but used to specify encoding 

encoding
	default is UTF-8

prolog
	xml declaration
		looks like a pi but isn't
		optional, but must be on 1st line
		must include version
	processing instructions
		format 
			<?'target' 'psuedo attrs'?>
		no space allowed between target & first '?'
		psuedoattributes
			any legal characters may follow
			e.g.
			URI reference: href
				relative to base URI - dir of doc
			type
				type of referenced doc
				for xsl - text/xsl
					


root element
	every xml doc has one
	declare namespaces here

namespaces
	allow prefixing of element names to avoid ambiguity, e.g.
		<rdf:RDF 
		  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
			xmlns="http://my.netscape.com/rdf/simple/0.9/" >
		<content here>
		</rdf:RDF>
	declaration with no prefix - default ns

XML & Data
	2 ways to represent data:
		attributes & values
			from xml.dom import minidom
			x = '''<x a="b" d="e f g" num="38" />'''
			d = minidom.parseString(x)
			d.firstChild.attributes.items()
			[(u'a', u'b'), (u'num', u'38'), (u'd', u'e f g')]
		nesting tags
			element = tag + [content][ordered seq of subelements] + closing tag
				Any given element may contain attributes and subelements and text data.


XPath for Selecting Nodes
	format: axis::node_name
	axis
		child		children of context node (cn)
		descendant	all nodes in cn, except self
		descendant-or-self	above, including self = '//'
		parent		parent of cn - one only
		ancestor	parent, grandparent etc. (not siblings of these)
		ancestor-or-self
		following/preceeding-sibling
					clarify
		following/preceedint
					all nodes f/p within cn but not cn's own descendants
		attribute	attributes of cn = @
		self		cn = .	

DOM 
	Structure oriented - nodes in heirarchy
	API capable of
		adding, deleting nodes, finding siblings, children
	documentElement

	node types
		with children
		w/o children = leaf nodes

SAX
	events occurring linerally in a file, text, or other stream
	says little about structure of doc



