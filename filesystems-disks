
General {{{1
    MBR
        512 bytes long, stored at sector 0
        contains boot loader e.g Grub and partition table (primary & extended but not logical)
        limitation of 4 primary partitions & 2TB disk

    GPT GUID Partition Table
        Stores partition info as GUID's (= UUID in Linux) instead of by order

Block devices, Disks, Partitions {{{1
Info {{{2

https://wiki.archlinux.org/index.php/Persistent_block_device_naming

lsblk -f	tree of disks, parts, labels, UUIDs, mount points
            no partlabel
blkid		shows UUID's and types

sfdisk - partition table reporting
	-s  [<device - partition or disk>]    
		show disk/partition size
	-l [options] <dev>
	-D  DOS compatibility - free 512 free at part beginning
	-L  ignore irrelevant to Linux

udevadm info -n /dev/sdb -q all
findmnt

gpart
	find lost partitions






Utilities {{{2 

compatibility
    dd - bs=2048 for compatibility with desktop disk utilities like Gnome Disks

partition writable by users
	fstab options: rw - no need for uid option in fs types that preserve ownership
	create directory in partition writable by user

dd
    http://www.noah.org/wiki/Dd_-_Destroyer_of_Disks 
	exact copy of entire partition including MBR
		dd bs=2048 if=/dev/part of=/dev/anotherpart

cfdisk
	said (by the fdisk man page) to be reliable and better
	than fdisk
	'maximize' option creates incompatibility with Windows?
	print/sector command shows partitions in hd order

parted (qtparted and nparted on Knoppix)
	can resize ext2 & 3 partitions but start point can't move.
	gparted can move start point
	has lost partition rescue feature
	

sfdisk - partition table reporting
	-s  [<device - partition or disk>]    
		show disk/partition size
	-l [options] <dev>
	-D  DOS compatibility - free 512 free at part beginning
	-L  ignore irrelevant to Linux

testdisk
	haven't tried yet


blkid		shows UUID's and types
    -po udev <dev>  show partition details

gdisk, cgdisk
    like parted/cfdisk for gpt disks
    change partition labels
    no lvm info

partx -v -a <disk>
    show paritions with sector info
    tell kernel about partitions

sfdisk -l
udevadm info -n /dev/sdb -q all

change labels
	e2label / e2fsprogs		for extX
	btrfs filesystem label /dev/XXX <label> 
	swaplabel -L <label> /dev/XXX

Lost partition recovery
gpart
testdisk
    http://www.cgsecurity.org/wiki/TestDisk_Step_By_Step


Loopback files, images {{{2


file for use as loop devices - img
	create file 
		qemu-img
		dd if=/dev/zero of=/home/you/cryptfile bs=1M count=500
        truncate -s 10G lvm.img

	create a device from file
		losetup <dev> <file>
        losetup -f --show lvm.img


	mount a partition
        kpartx  - create device mapper entries for partitions in a device file

		print partition table
			 fdisk -l -u file.img
		multiply starting cyclinder number * 512, e.g. 63 * 512 = 32256
		mount -o loop,offset=32256 image.img mnt	

    create lvm vg in file
        pvcreate /dev/loop0
        vgcreate lxc /dev/loop0


FS Info {{{1

df

findmnt     show mounted filesystems
    --df/-D     show space used
    --fstab/-s  show only from fstab
    -S <dev>    show on device
    --target/-T <dir>   show only for mount dir
    -l          list format output

du 
    -hs * | sort -h - sort by human readable size
    -schx /*	shows disk space used by subdirs

Filesystems {{{1
Attributes {{{2	
change times
	atime
		access time
		time of read (including backups) 
		permissions changes don't affect
	mtime   
		change to file data
	ctime   
		change to file data, permissions, or ownership (most
		inclusive)

ExtX {{{2

Resize
    e2fsadm - 
        resize physical or LVM volumes and filesystems (using lvextend and
        ext2online)
    ext2online - resize online (mounted) ext2 fs. Requires kernel patch. 

Journals:
    Add/Remove
        tune2fs -j /dev/xxx<n>
        tune2fs -O ^has_journal /dev/xxx<n>

tmpfs {{{2
	Mount directory in tmpfs
		mount -t tmpfs -o size=100M,mode=0755 tmpfs /var/cache/tmp
	entry in /etc/fstab
		tmpfs /var/www/www.example.com/cache tmpfs size=100M,mode=0755 0 0

btrfs {{{2

Make fs
	/sbin/mkfs.btrfs - in btrfs-tools
Make subvolume
	btrfsctl -S NewSubVol /mnt/test
Mount subvolume
	mount -t btrfs -o subvol=subvolname /dev/sda2 /mnt/new_subvol 
	mount -t btrfs -o subvolid=### /dev/sda2 /mnt/new_subvol 
Make snapshot
	btrfsctl -s /mnt/btrfs/snapshot_of_root /mnt/btrfs 

btrfs balance - distribute data after new vol added
    start /

btrfs device
    add <dev> <dev> | <mount point of existing fs e.g. '/'>

btrfs subvolume 
    list <path>

btrfs filesystem 
    label /dev/XXX <label> 

        

    df
        usage info

    resize
        resize <size> | max <mounted fs>

    show
        shows usage info maybe more accurate than df

Repair - fs umounted
	btrfs check --repair



Mounting & Permissions (edit needed) {{{2

mount
	attaches a filesystem on a device to a point in unix filesystem tree.
	defaults options 
		rw, suid, dev, exec, auto, nouser, async

mount partition in a loopback file
	http://wiki.edseek.com/guide:mount_loopback
	http://www.unix.com/filesystems-disks-memory/24366-can-loopback-filesystem-partitioned.html
	install grub
		http://www.usenet-forums.com/linux-general/95580-install-grub-hdd-image.html


allow umounting
	Running 'exec /bin/sh' eliminates last processes.
	fuser: show what processes are using which files.
	cat /proc/mounts

automount
	docs
		HOWTO - very good intro to network filesystems 
			http://www.Linux-Consulting.com/Amd_AutoFS/autofs.html

	requirements
		amd automount daemon - userspace
		autofs - kernel support needed -
			cat /proc/filesystems -> autofs

attributes
	ownership
		user & users imply noexec, nosuid, & nodev unless subsequently
		overriden 
			e.g. -o user[s],exec,suid
		"auto, uid=500, gid=100" 
			take all ownership of files in mounted partition.
restricting access
	Colin Watson
		There should be no need to apply the restrictive permissions to
		subdirectories too, because once execute permission is withheld on
		a parent directory you can't get to the subdirectories anyway 
	in /home - chmod * 700
	in adduser.conf
		DIR_MODE=700

		
change times
	atime
		access time
		time of read (including backups) 
		permissions changes don't affect
	mtime   
		change to file data
	ctime   
		change to file data, permissions, or ownership (most
		inclusive)

Changing volumes
	with ext2 filesystems
		e2fsadm - 
			resize physical or LVM volumes and filesystems (using lvextend and
			ext2online)
		ext2online - resize online (mounted) ext2 fs. Requires kernel patch. 
		ext2resize - resize offline ext2 fs.
	LVM
		pvresize - resize vg on a device


LVM {{{1
docs {{{2

Rearranging partitions example:
http://microdevsys.com/wp/linux-lvm-resizing-partitions/


terms {{{2

vg - volume group
    collection of Logical Volumes and Physical Volumes into one administrative unit

PV/physical volume
    partition or disk

lv - logical volume
    visible as a standard block device
    equivalent to a partition
extents: smallest possible allocation size
    pe - physical extents
    le	logical extent - will be same size as pe's for vg

Snapshot
- Used mainly as ro backup of changing original.  Data copied to snapshot before changed in original 

Thinly-Provisioned Snapshot Volumes
- snapshots without preset size


PV/physical volume {{{2

Initialize a disk or partition to use in a physical vol.
    pvcreate <dev> [<dev> ...]

Info
    pvs --partial --verbose
        Shows pv's in vg

    pvdisplay --maps
        shows physical layout of volume

    pvremove

	pvscan
	vgscan
	fdisk -l    shows lv sizes

pvresize - resize vg on a device


<<<<<<< HEAD
VG/volume group {{{2

composed of 1 or more PV's, optionally already initialized with pvcreate

Create - also makes devices into pv's if not already
    vgcreate vg_name /dev/hda1 /dev/hdb

Change
    Extend existing vg
        vgextend vgname pvdevpath  
    Remove pv
        vgreduce vgname pvpath
        pvremove 
        or?
        vgchange -a n vg_name
        vgremove  

Info
    vgdisplay
    

Activate vg 
    'vgchange -a y' or reboot

LV/logical volume {{{2

Create 
    lvcreate [-n name] [-L size(kmg) -l sizeLE] vgName [vgpath]
        size
            -l	size in Physical Extents
            -L	size in MB or GB
        create lv using all space in vg
            -l 100%VG
        create lv using all free space in vg
            -l 100%FREE
        snapshot
            -s origin [name|path]
        thin vols
            -T --thin
            -V --virtualsize    

Info
    lvs

Resize  
    lvextend
            -r option resizes fs using fsadm (not for btrfs)
            -r -L +3GB /dev/atomicos/root
            -r -l +100%FREE 
    lvreduce
    lvresize


Thin Volumes {{{2

man lvmthin

Create pool
    lvcreate -T -L3G extra_vg/thin_pool1

Create pool, leaving 5% for metadata
    lvcreate -T -l 95%FREE  vg/thinpool

Create pool & vol
    lvcreate -T -L3G extra_vg/thin_pool1 -V2G --name thin_vol1

Create vol in existing pool
    lvcreate -n ThinLV -V VirtualSize --thinpool VG/ThinPoolLV

Snapshot
    lvcreate -n SnapLV -s VG/ThinLV (do not spec. size)

Check pool usage: 
    lvdisplay pool, 'Allocated pool data'
    lvs 

lvm.conf
    thin_pool_autoextend_threshold = 100 disables

Free space after files in vol deleted
    fstrim -v <mount point>


Info / utilities {{{2

Access LVM on disk from rescue disk
	vgscan
	vgchange -ay





Mounting & Permissions  {{{1

setfacl -m 'u:andmalc:rwx' /var/lib/machines 

mount
	attaches a filesystem on a device to a point in unix filesystem tree.

	mount as writable by a user
		 -o user,dmask=022,fmask=011

allow umounting
	Running 'exec /bin/sh' eliminates last processes.
	fuser: show what processes are using which files.
	cat /proc/mounts

/etc/fstab settings
	defaults options 
		rw, suid, dev, exec, auto, nouser, async
	ownership
		user & users imply noexec, nosuid, & nodev unless subsequently
		overriden 
			e.g. -o user[s],exec,suid
		"auto, uid=500, gid=100" 
			take all ownership of files in mounted partition.

	recommended options
		/		defaults,relatime,errors=remount-ro
		/home	nodev,nosuid,relatime

