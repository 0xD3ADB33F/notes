
Usenet binaries
	rar definition http://www.techsono.com/faq/rar.html
		- compression & archive format
		- segmentable into smaller files

	par / parity files: manifest for a set of rar files
	Extract par files
		unrar <first part file name.par> <outfile>
	Rejoin parts 	
		par2 r <outfile base> infiles.rar

	Only d/l rar files with an associated par file for best reliability
	Use nget to d/l and assemble parts, understands par files

Deb docbook ref card
	http://people.debian.org/~debacle/refcard/

osnews article on oss
	http://osnews.com/comment.php?news_id=6914

debian
	resume aborted configure
		dpkg --configure -a

docutils intro
	http://docutils.sourceforge.net/spec/rst/introduction.html

packages
	desktop
		menu-xdg
			convert Debian menus to freedesktop.org format
		vlc media player
	db
		gnome mergeant db admin
	dev
		pydb
			Python command line debugger
	admin
		rssh
			scp/sftp only access
		secvpn

ConfigFile module

I firmly believe that configuration parameters belong
in a configuration file.  ConfigParser module handles
these very well.  Essentially it builds the dictionary
for you in the form of a ConfigParser class instance.
Then when you wish to change a parameter, edit the
config file and the next time the program runs it reads
the new parameters.  You didn't mention your platform,
but I do a lot on Windows and "freeze" my programs using
py2exe, so configuration files come in really handy to
make those "run-time" variables available to the program.
I also find that people are quite comfortable editing
these files.

Config file would look something like:

[database]
name=nanana
userdb=bob
password=********

[other]
timetosleep=100
path=/home/script

program to read this:

import sys
def ini_error(section, option):
    #
    # Insert code here to handle missing parameters
    #
    print "Unable to locate section=%s, option=%s in .INI file" % (section,
option)
    sys.exit(2)


import ConfigParser
ini_filename="/directory/where/config/stored/program.ini"
INI=ConfigParser.ConfigParser()
INI.read(ini_filename)

section="database"
option="name"
try:    database=INI.get(section, option)
except: ini_error(section, option)

option="userdb"
try:    userdb=INI.get(section, option)
except: ini_error(section, option)

option="password"
try:    password=INI.get(section, option)
except: ini_error(section, option)

section="other"
option="name"
try:    timetosleep=INI.getint(section, option)
except: timetosleep=100

option="path"
try:    path=INI.get(section, option)
except: ini_error(section, option)


