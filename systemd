systemctl {{{1
lists running units
options:
    -H <host> (uses SSH)
    -M <container>
     --failed

Subcommands

unit commands
    list-units --type=[target | unit type]  #this is default command
    start, restart, stop, restart, reload, status <runtime> [service | socket]
    show (properties)
    kill <name>

unit fle commands
    edit <unit>
        creates 'override.conf' in /etc/systemd/system/<unit name>
        reloads unit when done
    edit --full <unit>
        edit unit file

system commands
    suspend, hibernate, reboot, halt
    switch-root 
    set/get-default  <target name>
    isolate <target name>   switch immmediately to other target

list-machines


journalctl {{{1
	--no-pager don't pipe to pager
	-f			follow
    -r          reverse (newest entries first)
    -n x        newest 10 or x

    filters:
	-b / -b -1		this boot only / last boot
    -k          kernel output
    -p err      priority - show at this level or above
                emerg, altert, crit, err, warning, notice, info, debug
	-u sshd		show logs for unit name sshd
	-r /usr/sbin/sshd	same with path to exec

    filter by date/time
    --since "1 hour ago" | today 
    --until "2015-01-11 03:00"

    manage logs:
    --disk-usage    show size
    --vacuum-size=1G
    --vacuum-time=1year

    config: /etc/systemd/journald.conf
    SystemMaxUse=   max disk usage

Other {{{1

hostnamectl
    -M containername
    set-hostname 'name'


logind 

    etc/systemd/logind.conf
        Configure sleep/hibernate timeout and which buttons activate
    etc/systemd/sleep.conf
        [Sleep]
        SuspendState=freeze

machinectl
    login, reboot, poweroff, status <container>
    bind <machinename> <source path> [<dest path in cont>]


networkctl 	
	noarg	lists network interfaces
	status #	shows info for interface #

timedatectl
    list-timezone
    set-timezone America/Toronto

systemd-cgls
    show processes in control groups

Stop/Start GDM
systemctl isolate multi-user.target (or just init 3)
systemctl isolate graphical.target (or default.target or init 5)

systemd-nspawn {{{1 

-D <dir>  use <dir> as fs root
-M <machine>  boot machine
-b boot
 --ephemeral, -x 
    create snapshot, remove after done
 --template=<dir>
    use fs in dir as template 

examples:
    -xb -D /  #ephemeral snap of root
     -b -D /var/lib/container/mycontainer --template=/var/lib/container/fedora21 # tree using template
    --template=/    #use host root dir as template 

Container as service - must be in /var/lib/machines
systemctl start systemd-nspawn@mycontainer.service


xhost +local:
echo $DISPLAY
export DISPLAY=:0
