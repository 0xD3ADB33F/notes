Docs
	Linux Mag intro:
		http://www.linux-mag.com/2004-05/subversion_01.html
	Chapter in Svn Book on repo planning
		http://svnbook.red-bean.com/svnbook-1.1/ch05s04.html
	My Experiences with svn: Permissions & discussion
		http://www.chiark.greenend.org.uk/~sgtatham/svn.html

Setup
	
	network access
		HTTP/Dav
			apache dav module in Debian libapache2-svn package

types of command
	svnadmin & svnlook 
		are server-side utils
		intended to modify repo so take file, not URL, arguments

		
Create repo
	create a repo and copy contents of mytree into 'proj'
		svnadmin create /var/repo
		mkdir svnimport 
		mkdir svnimport/proj
		svn import svnimport URL/var/repo/
		svn ls URL/repo/
			/proj/files etc.

Add to repo
	cd into wc
	copy in directories
	svn add <dirs>


Checkouts
	create a dir 'trunk' in the cwd and add contents of trunk there
		svn checkout <URL>/svn/trunk
	create a dir 'svn' in the cwd and add contents of trunk incl. subdirs
		svn checkout <URL>/svn/trunk svn
	add contents of trunk to cwd
		svn checkout <URL>/svn/trunk .
		
show info
	svn info
		show wc URL, revision, author, & other data
	svn list / ls 
		<working copy path>
			list wc contents as they exist in the repo
		URL
			list repo contents
	status 
		show file modification info & whether under version control
		-u status on server
        codes
            U - updated in repo, no local changes
            G - local changes but not conflicting with remote changes
            C - conflict
	svnlook 
		<subcommand> <repo path> /<path in repo>
		subcommands
			tree
				
			info
				author & date info
			changed
				print changed paths

backup contents
	svnadmin
		hotcopy <repo path> <backup path>
			safe copy a live repo


Remove an item from versioning
	move item elsewhere
	svn status - shows items with a '!' -thinks its missing
	svn rm item
	svn commit
	move item back
	for multiple files use:
		svn st | awk '/!/ { print $2 }' | xargs svn del


resolving conflicts
    do one of:
        examine & remove conflict markers & their content from conflicted file
        run svn resolved

        copy either the local (fn.mine) or remote (fn.r#) onto the file
        run svn resolved

        svn revert <fn> to abandon local changes



